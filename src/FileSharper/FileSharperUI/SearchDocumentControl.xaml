<!--
Copyright (c) 2017 Andrew Vardeman.  Published under the MIT license.
See license.txt in the FileSharper distribution or repository for the
full text of the license.
-->
<UserControl x:Class="FileSharperUI.SearchDocumentControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:FileSharperUI"
             xmlns:helpers="clr-namespace:FileSharperUIHelpers;assembly=FileSharperUIHelpers"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <helpers:SearchViewModelToDynamicGridViewConverter x:Key="listViewGridViewConverter" />
        <helpers:BoolToVisibilityConverter x:Key="boolToVisibilityConverter" />
        <helpers:ObjectToVisibilityConverter x:Key="objectToVisibilityConverter" />
        <sys:Boolean x:Key="True">True</sys:Boolean>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="4"/>
            <RowDefinition Height="{Binding ResultsPaneHeight}"/>
        </Grid.RowDefinitions>
        <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" Grid.Row="0" Padding="10">
            <Grid Height="Auto" Width="Auto" IsEnabled="{Binding NotSearching}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <GroupBox x:Name="fileSourceGroupBox" Grid.Row="0" Header="File Source" HorizontalAlignment="Left" VerticalAlignment="Top" Width="Auto" Height="Auto">
                    <local:FileSourceNodeControl x:Name="fileSourceNodeControl" DataContext="{Binding FileSourceNode}" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top"/>
                </GroupBox>
                <GroupBox x:Name="conditionGroupBox" Grid.Row="1" Header="Condition" HorizontalAlignment="Left" VerticalAlignment="Top" Width="Auto" Height="Auto">
                    <local:ConditionNodeControl x:Name="conditionNodeControl" DataContext="{Binding ConditionNode}" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top"/>
                </GroupBox>
                <GroupBox x:Name="fieldSourcesGroupBox" Grid.Row="2" Header="Additional Fields" HorizontalAlignment="Left" VerticalAlignment="Top" Width="Auto" Height="Auto">
                    <local:FieldSourcesNodeControl x:Name="fieldSourcessNodeControl" Grid.Row="2" DataContext="{Binding FieldSourcesNode}" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top"/>
                </GroupBox>
                <GroupBox x:Name="testedProcessorsGroupBox" Grid.Row="3" Header="When Tested..." HorizontalAlignment="Left" VerticalAlignment="Top" Width="Auto" Height="Auto">
                    <local:ProcessorsNodeControl x:Name="testedProcessorsNodeControl" Grid.Row="4" DataContext="{Binding TestedProcessorsNode}" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top"/>
                </GroupBox>
                <GroupBox x:Name="matchedProcessorsGroupBox" Grid.Row="4" Header="When Matched..." HorizontalAlignment="Left" VerticalAlignment="Top" Width="Auto" Height="Auto">
                    <local:ProcessorsNodeControl x:Name="matchedProcessorsNodeControl" Grid.Row="4" DataContext="{Binding MatchedProcessorsNode}" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top"/>
                </GroupBox>
            </Grid>
        </ScrollViewer>
        <GridSplitter Grid.Row="1" HorizontalAlignment="Stretch"/>
        <Grid Grid.Row="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button Margin="4" Padding="4" Width="60" VerticalAlignment="Center" Grid.Row="0" Grid.Column="0" Command="{Binding SearchCommand}" Visibility="{Binding Searching, Converter={StaticResource boolToVisibilityConverter}, ConverterParameter={StaticResource True}}">Search</Button>
            <Button Margin="4" Padding="4" Width="60" VerticalAlignment="Center" Grid.Row="0" Grid.Column="0" Command="{Binding RequestStopCommand}" Visibility="{Binding CanRequestStop, Converter={StaticResource boolToVisibilityConverter}}">Stop</Button>
            <Button Margin="4" Padding="4" Width="60" VerticalAlignment="Center" Grid.Row="0" Grid.Column="0" Command="{Binding CancelCommand}" Visibility="{Binding CanCancel, Converter={StaticResource boolToVisibilityConverter}}">Kill</Button>
            <StackPanel x:Name="matchLimitsStackPanel" IsEnabled="{Binding NotSearching}" Orientation="Horizontal" Margin="4" Grid.Row="0" Grid.Column="1">
                <Label Margin="4" VerticalAlignment="Center">Display only first</Label>
                <TextBox Text="{Binding MaxResultsDisplayed}" VerticalAlignment="Center" Width="50" Padding="2" />
                <Label VerticalAlignment="Center" Margin="4">matches</Label>
                <Label VerticalAlignment="Center" Margin="4"></Label>
                <CheckBox x:Name="limitMatchesCheckBox" Margin="4" VerticalAlignment="Center" IsChecked="{Binding LimitMatches}">Stop after</CheckBox>
                <TextBox Text="{Binding MaxToMatch}" VerticalAlignment="Center"  IsEnabled="{Binding ElementName=limitMatchesCheckBox, Path=IsChecked}" Width="50" Padding="2" />
                <Label VerticalAlignment="Center" Margin="4">matches</Label>
            </StackPanel>
            <TabControl Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2">
                <TabItem Header="Results">
                    <ListView x:Name="resultsListView" VerticalAlignment="Stretch" ItemsSource="{Binding Path=SearchViewModel.SearchResults.DefaultView}" View="{Binding SearchViewModel, Converter={StaticResource listViewGridViewConverter}}" MouseDoubleClick="ListView_MouseDoubleClick">
                        <ListView.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Copy Path(s)" Command="{Binding SearchViewModel.CopyPathCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItems}" />
                                <MenuItem Header="Copy File(s)" Command="{Binding SearchViewModel.CopyFileCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItems}" />
                                <MenuItem Header="Open File(s)" Command="{Binding SearchViewModel.OpenFileCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItems}" />
                                <MenuItem Header="Open Containing Folder(s)" Command="{Binding SearchViewModel.OpenContainingFolderCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItems}" />
                                <MenuItem Header="Open Command Prompt(s) to Containing Folder(s)" Command="{Binding SearchViewModel.OpenContainingFolderCommandPromptCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItems}" />
                            </ContextMenu>
                        </ListView.ContextMenu>
                    </ListView>
                </TabItem>
                <TabItem Header="{Binding SearchViewModel.ExceptionsHeader, FallbackValue=Exceptions}">
                    <TextBox HorizontalAlignment="Stretch" Height="Auto" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" TextWrapping="NoWrap" Text="{Binding Path=SearchViewModel.ExceptionText}"/>
                </TabItem>
            </TabControl>
            <StatusBar Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2">
                <StatusBar.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                        </Grid>
                    </ItemsPanelTemplate>
                </StatusBar.ItemsPanel>
                <StatusBarItem Height="Auto" Width="Auto" Grid.Row="0" Grid.Column="0" HorizontalAlignment="Left" Visibility="{Binding SearchViewModel, Converter={StaticResource objectToVisibilityConverter}}">
                    <Label Content="{Binding SearchViewModel.StatusText, FallbackValue=Ready}" />
                </StatusBarItem>
                <StatusBarItem Height="Auto" Grid.Row="0" Grid.Column="1" HorizontalContentAlignment="Stretch" Visibility="{Binding Searching, Converter={StaticResource boolToVisibilityConverter}}">
                    <ProgressBar Height="15" IsIndeterminate="True"/>
                </StatusBarItem>
            </StatusBar>
        </Grid>
    </Grid>
</UserControl>
